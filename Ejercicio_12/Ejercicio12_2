Algoritmo 1: Definición de abrir una cuenta

abrir(c : CUENTA ; saldo_inicial : REAL)
    # Inicializar `c' mediante un `saldo_inicial'.

Precondición
    saldo_inicial > 0

Realización
    c.descubierto <- 0
    c.saldo <- saldo_inicial

Postcondición
    c.descubierto = 0
    # El descubierto no está autorizado
    antiguo(saldo_inicial) = saldo_inicial
    c.saldo = saldo_inicial
fin abrir

Algoritmo 2: abonar una cuenta

abonar(c : CUENTA ; crédito : REAL)
    # Crédito "c" de la suma "crédito".
Precondición
    c.saldo ≠ NULO
    crédito ≠ NULO
realización
    c.saldo <- c.saldo + crédito
postcondición
    # El descubierto autorizado y el importe del "crédito" no se modifican
    antiguo(c).descubierto = descubierto
    antiguo(c).crédito = crédito
    # El saldo aumenta con el "crédito"
    c.saldo = antiguo(c).saldo + crédito
fin abonar

Algoritmo 3: cargar una cuenta

cargar(c : CUENTA ; débito : REAL)
    # Carga 'c' con la suma 'débito'.
Precondición
 c.saldo ≠ NULO
 débito ≠ NULO
 c.saldo + c.descubierto ≥ débito ≥ 0
realización
 abonar(c, –débito)
postcondición
     # El descubierto autorizado y el importe del `débito' no se
     # modifican
 antiguo(c).descubierto = descubierto
 antiguo(débito) = débito
    # Al saldo se le resta el 'débito'
 c.saldo = antiguo(c).saldo – débito
fin cargar

Algoritmo 4: función consultar una cuenta

consultar(c : CUENTA) : REAL
    # El 'saldo' de la cuenta 'c'.
precondición
    c.saldo ≠ NULO
realización
    Resultado ← c.saldo
postcondición
    Resultado = c.saldo
fin consultar